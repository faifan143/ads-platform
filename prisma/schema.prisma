generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContentGem {
  id              String    @id @default(uuid())
  contentId       String    @unique
  points          Int
  createdAt       DateTime  @default(now())
  claimedByUserId String?
  claimedAt       DateTime?

  content       Content @relation(fields: [contentId], references: [id], onDelete: Cascade)
  claimedByUser User?   @relation(fields: [claimedByUserId], references: [id])

  @@index([contentId])
  @@index([claimedByUserId])
}

model Interest {
  id             String    @id @default(uuid())
  name           String    @unique
  targetedGender Gender?
  minAge         Int
  maxAge         Int
  contents       Content[] @relation("InterestContent")
  users          User[]    @relation("UserInterest")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model User {
  id                  String                @id @default(uuid())
  name                String
  phone               String                @unique
  password            String
  dateOfBirth         DateTime
  gender              Gender
  providence          Providence
  claimedGems         ContentGem[]
  adsPerMonth         Int                   @default(0)
  points              Int                   @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  viewedAds           UserContent[]
  ProductPurchase     ProductPurchase[]
  interests           Interest[]            @relation("UserInterest")
  UserContentLike     UserContentLike[]
  UserContentWhatsApp UserContentWhatsApp[]
}

model Product {
  id              String            @id @default(uuid())
  name            String
  photo           String
  details         String
  pointsPrice     Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductPurchase ProductPurchase[]
  purchasable     Boolean           @default(true)
}

model Content {
  id                String                @id @default(uuid())
  title             String
  description       String
  ownerName         String
  ownerNumber       String
  type              AdType
  intervalHours     Int
  endValidationDate DateTime
  gem               ContentGem?
  mediaUrls         Json[]
  interests         Interest[]            @relation("InterestContent")
  viewedBy          UserContent[]
  likedBy           UserContentLike[]
  whatsappedBy      UserContentWhatsApp[]
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
}

model UserContentLike {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  content   Content  @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId String
  likedAt   DateTime @default(now())

  @@unique([userId, contentId])
}

model UserContentWhatsApp {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  content      Content  @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId    String
  whatsappedAt DateTime @default(now())

  @@unique([userId, contentId])
}

model UserContent {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  content   Content  @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId String
  viewedAt  DateTime @default(now())

  @@unique([userId, contentId])
}

model ProductPurchase {
  id          String   @id @default(uuid())
  userId      String
  productId   String
  pointsSpent Int
  purchasedAt DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])

  @@unique([userId, id])
  @@index([userId])
  @@index([productId])
}

enum Gender {
  MALE
  FEMALE
}

enum AdType {
  STORY
  REEL
}

enum Providence {
  ALEPPO
  IDLIB
  LATAKIA
  TARTOUS
  HOMS
  HAMA
  DAMASCUS
  DARAA
  SUWAYDA
  QUNEITRA
  RAQQAH
}
